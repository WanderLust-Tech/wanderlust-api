// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WanderlustApi.Data;

#nullable disable

namespace WanderlustApi.Migrations
{
    [DbContext(typeof(WanderlustDbContext))]
    [Migration("20250825161534_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WanderlustApi.Models.CodeExample", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Bookmarks")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dependencies")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExpectedOutput")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LearningObjectives")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("License")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LongDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Prerequisites")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("Ratings")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("RelatedArticles")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("RelatedExamples")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<bool>("Runnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SetupInstructions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Subcategory")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<bool>("Verified")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Author");

                    b.HasIndex("Category");

                    b.HasIndex("DateCreated");

                    b.HasIndex("Difficulty");

                    b.HasIndex("Language");

                    b.ToTable("CodeExamples");
                });
#pragma warning restore 612, 618
        }
    }
}
