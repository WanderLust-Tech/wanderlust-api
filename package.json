{
  "name": "wanderlust-api-deployment",
  "version": "1.0.0",
  "description": "Deployment utilities for Wanderlust API",
  "scripts": {
    "deploy": "node scripts/deploy.js",
    "deploy:dev": "cross-env BUILD_CONFIGURATION=Debug node scripts/deploy.js",
    "deploy:prod": "cross-env BUILD_CONFIGURATION=Release node scripts/deploy.js",
    "build": "dotnet build WanderlustApi.csproj",
    "build:release": "dotnet build WanderlustApi.csproj -c Release",
    "publish": "dotnet publish WanderlustApi.csproj -c Release -o bin/Release/net8.0/publish",
    "publish:folder": "dotnet publish --configuration Release /p:PublishProfile=FolderProfile",
    "publish:iis": "dotnet publish --configuration Release /p:PublishProfile=Local-IIS",
    "publish:ftp": "dotnet publish --configuration Release /p:PublishProfile=FTP-Production",
    "publish:webdeploy": "dotnet publish --configuration Release /p:PublishProfile=WebDeploy-Production",
    "publish:linux": "dotnet publish --configuration Release /p:PublishProfile=Linux-Server",
    "publish:linux-fdd": "dotnet publish --configuration Release /p:PublishProfile=Linux-Server-FDD",
    "publish:docker": "dotnet publish --configuration Release /p:PublishProfile=Linux-Docker",
    "start": "dotnet run",
    "start:release": "dotnet run --configuration Release",
    "start:published": "node scripts/run-dll.js",
    "start:published-dev": "node scripts/run-dll.js --env Development",
    "start:published-prod": "node scripts/run-dll.js --env Production",
    "start:published-staging": "node scripts/run-dll.js --env Staging",
    "start:dll": "node scripts/run-dll.js",
    "start:dll:prod": "node scripts/run-dll.js --env Production",
    "start:dll:staging": "node scripts/run-dll.js --env Staging",
    "start:dll:custom": "node scripts/run-dll.js --urls \"http://localhost:5000\"",
    "start:published-folder": "dotnet bin/Release/net8.0/win-x64/publish/WanderlustApi.dll",
    "start:production": "cross-env ASPNETCORE_ENVIRONMENT=Production dotnet bin/Release/net8.0/win-x64/publish/WanderlustApi.dll",
    "start:development": "cross-env ASPNETCORE_ENVIRONMENT=Development dotnet bin/Release/net8.0/win-x64/publish/WanderlustApi.dll",
    "start:staging": "cross-env ASPNETCORE_ENVIRONMENT=Staging dotnet bin/Release/net8.0/win-x64/publish/WanderlustApi.dll",
    "start:published-urls": "cross-env ASPNETCORE_URLS=\"https://localhost:7134;http://localhost:5134\" dotnet bin/Release/net8.0/win-x64/publish/WanderlustApi.dll",
    "build-and-run": "npm run build:release && npm run start:dll",
    "publish-and-run": "npm run publish:folder && npm run start:dll:prod",
    "quick-deploy": "npm run publish:folder && npm run start:dll",
    "linux:build": "node scripts/linux-deploy.js build self-contained",
    "linux:build-fdd": "node scripts/linux-deploy.js build framework-dependent",
    "linux:docker": "node scripts/linux-deploy.js docker build",
    "linux:docker-run": "node scripts/linux-deploy.js docker run",
    "linux:docker-compose": "node scripts/linux-deploy.js docker compose",
    "linux:help": "node scripts/linux-deploy.js help",
    "test-connection": "node scripts/test-ftp-connection.js",
    "clean": "dotnet clean WanderlustApi.csproj",
    "clean:all": "dotnet clean WanderlustApi.csproj && rmdir /s /q bin obj 2>nul || true",
    "restore": "dotnet restore WanderlustApi.csproj",
    "watch": "dotnet watch run",
    "watch:release": "dotnet watch run --configuration Release",
    "help": "node scripts/run-dll.js --help"
  },
  "dependencies": {
    "basic-ftp": "^5.0.4",
    "dotenv": "^16.3.1"
  },
  "devDependencies": {
    "cross-env": "^7.0.3"
  },
  "keywords": [
    "deployment",
    "ftp",
    "dotnet",
    "api"
  ],
  "author": "Wanderlust Team",
  "license": "MIT"
}
